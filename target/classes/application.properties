
##MS SQL SERVER
#spring.datasource.url=jdbc:sqlserver://localhost:1433;database=schedule_bot
#spring.datasource.username=sa
#spring.datasource.password=12345
#spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
#spring.jpa.show-sql=true
#spring.jpa.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect
#spring.jpa.hibernate.ddl-auto = update

#MySQL
## MySQL (/testDatabaseJpa? nghia la dung database testDatabaseJpa)
## username password va jdbc.driver
## If have bug: "java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed"
## We can add "allowPublicKeyRetrieval=true&" to between ? and useSSL
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://us-cdbr-east-05.cleardb.net/heroku_c9fb3c25b4e0e14
spring.datasource.username=b45fe8d500adc3
spring.datasource.password=a0aa0dc2
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql=true
## Hibernate Properties
spring.jpa.hibernate.ddl-auto = update


## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# Please change this to the path where you want the uploaded files to be stored.
file.upload-dir=src/main/resources/files

#custom

#Telegram groupID
app.config.telegram.app-id=-1001671857531
#Telegram bot token
app.config.telegram.bot-token=5275209542:AAHG7NjD-7A8l_rsbsnXFVuvvqfMRwHa75k
#OpenWeatherMap API key
bot.open_weather_map_api_key=00c52627f4f85d1e7fff4fc243d12549